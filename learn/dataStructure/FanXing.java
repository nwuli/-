package dataStructure;

import java.util.ArrayList;
import java.util.List;

public class FanXing {
	
/*泛型可以理解为类型的形式化参数，这个可与我们定义方法中传入变量的形式参数进行类比，要求我们传入
具体类型的形式参数。
*/
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		/*首先让我们了解泛型的好处：就是防止我们犯错误,如果我们往一个类型中加入很多类型的变量，当然
		 * 这个是允许的， 当我们很久以后需要往里面进行取值的时候，我们可能会忘记我们之前往里面添加的类型
		 * 这就可能会报错，或者我们需要进行强制类型转换
		*/
/*		public class GenericTest {

		   
		        List list = new ArrayList();
		        list.add("qqyumidi");
		        list.add("corn");
		        list.add(100);

		        for (int i = 0; i < list.size(); i++) {
		            String name = (String) list.get(i); // 1
		            System.out.println("name:" + name);
		        }
		        }
*/
		
		      //List<E>=new ArrayList<E>();
		
		}
	
}
